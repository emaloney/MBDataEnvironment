<MBML>
	<Var name="repo:host" literal="github"/>
	<Var name="repo:name" type="dynamic" expression="$project:name"/>
	<Var name="repo:branch" value="$ENV[BRANCH]"/> <!-- expect calling script to set this environment variable -->
	<Var name="repo:branch:settings" type="dynamic" expression="^if($repo:branch -AND ^containsValue(^keys($versions)|$repo:branch)|$repo:branch|^if($project:branch:settings|$project:branch:settings|master))"/>
	<Var name="repo:url:home" type="dynamic" expression="https://github.com/${repo:owner}/${repo:name}"/>
	<Var name="repo:url:branch" type="dynamic" expression="${repo:url:home}/tree"/>
	<Var name="repo:url:http" type="dynamic" expression="${repo:url:home}"/>
	<Var name="repo:url:ssh" type="dynamic" expression="git@github.com:${repo:owner}/${repo:name}"/>
	<Var name="repo:dir" type="dynamic" expression="../../${repo:name}"/>

	<Var name="platforms" type="map">
		<Var name="xcode-8.3" type="map">
			<Var name="iOS" type="map">
				<Var name="runDestination" literal="platform=iOS Simulator,OS=10.3,name=iPad Pro (9.7 inch)"/> 
				<Var name="supportsUnitTests" boolean="T"/> 
			</Var>
			<Var name="macOS" type="map">
				<Var name="runDestination" literal="platform=macOS"/> 
				<Var name="supportsUnitTests" boolean="T"/> 
			</Var>
			<Var name="tvOS" type="map">
				<Var name="runDestination" literal="platform=tvOS Simulator,OS=10.2,name=Apple TV 1080p"/> 
				<Var name="supportsUnitTests" boolean="T"/> 
			</Var>
			<Var name="watchOS" type="map">
				<Var name="runDestination" literal="platform=watchOS Simulator,OS=3.2,name=Apple Watch Series 2 - 42mm"/> 
				<Var name="supportsUnitTests" boolean="F"/> 
			</Var>
		</Var>
	</Var>

	<Var name="buildPlatform:default" literal="xcode-8.3"/>
	<Var name="buildPlatform:active" type="dynamic" expression="^if(^matchesRegex($repo:branch|^^xcode-([0-9]+){1}(\.[0-9]+){1,2}(-.*?)*^q($))|$repo:branch|$buildPlatform:default)"/>
	<Var name="buildPlatform:supportsCI" type="dynamic" expression="^if($versions[$repo:branch][Travis]|1|0)"/>
	<Var name="platforms:build" type="dynamic" expression="$platforms[$buildPlatform:active]"/>
	<Var name="platforms:ci" type="dynamic" expression="$platforms[$buildPlatform:active]"/>

	<Var name="branches" type="list">
		<Var literal="master"/>
	</Var>

	<Var name="branchForVersions" type="dynamic" expression="^if($versions[$repo:branch]|$repo:branch|master)"/> 

	<Var name="xcode:version" type="dynamic" expression="$versions[$branchForVersions][Xcode]"/>
	<Var name="swift:version" type="dynamic" expression="$versions[$branchForVersions][Swift]"/>
	<Var name="iOS:version:minimum" type="dynamic" expression="$versions[$branchForVersions][minimum][iOS]"/>
	<Var name="macOS:version:minimum" type="dynamic" expression="$versions[$branchForVersions][minimum][macOS]"/>
	<Var name="tvOS:version:minimum" type="dynamic" expression="$versions[$branchForVersions][minimum][tvOS]"/>
	<Var name="watchOS:version:minimum" type="dynamic" expression="$versions[$branchForVersions][minimum][watchOS]"/>
	<Var name="project:travisImage" type="dynamic" expression="$versions[$branchForVersions][Travis]"/>

	<Var name="versions" type="map">
		<!-- master branch declarations -->
		<Var name="master" type="map">
			<Var name="Swift" literal="3.1"/> 
			<Var name="Xcode" literal="8.3"/>
			<Var name="Travis" literal="xcode8.3"/>

			<Var name="Carthage" literal="0.18.1"/>
			
			<Var name="current" type="map">
				<Var name="iOS" literal="10.3"/> 
				<Var name="macOS" literal="10.12"/> 
				<Var name="tvOS" literal="10.2"/> 
				<Var name="watchOS" literal="3.2"/> 
			</Var>
			
			<Var name="minimum" type="map">
				<Var name="iOS" literal="9.0"/> 
				<Var name="macOS" literal="10.11"/> 
				<Var name="tvOS" literal="9.0"/> 
				<Var name="watchOS" literal="2.0"/> 
			</Var>
		</Var>
	</Var>

	<Var name="branches:nonmaster" type="dynamic" expression="^sort(^filter($branches|$item != master))"/>
	<Var name="branches:other" type="dynamic" expression="^sort(^filter($branches|$item != $repo:branch))"/>

	<Var name="supports:iOS" type="dynamic" expression="^containsValue($project:platforms|iOS)"/>
	<Var name="supports:macOS" type="dynamic" expression="^containsValue($project:platforms|macOS)"/>
	<Var name="supports:tvOS" type="dynamic" expression="^containsValue($project:platforms|tvOS)"/>
	<Var name="supports:watchOS" type="dynamic" expression="^containsValue($project:platforms|watchOS)"/>

	<Var name="project:version" value="$ENV[FRAMEWORK_VERSION]"/> <!-- expect calling script to set this environment variable -->
	<Var name="project:version:public" value="$ENV[FRAMEWORK_VERSION_PUBLIC]"/> <!-- expect calling script to set this environment variable -->
	<Var name="project:file" type="dynamic" expression="${project:name}.xcodeproj"/>
	<Var name="project:workspace" type="dynamic" expression="${project:name}.xcworkspace"/>
	<Var name="project:hasWorkspace" type="dynamic" expression="^fileExists(${repo:dir}/${project:workspace})"/>
	<Var name="project:container" type="dynamic" expression="^if($project:hasWorkspace|$project:workspace|$project:file)"/>

	<Var name="project:framework" type="dynamic" expression="${project:name}.framework"/>
	<Var name="project:import" type="dynamic" expression="import ${project:name}"/>
	
	<Var name="project:readme:description" type="dynamic" expression="^selectFirstValue($project:description:formats[markdown]|$project:description:formats[text]|$project:description)"/>
	<Var name="project:readme:examples:file" type="dynamic" expression="../../${repo:name}/Sources/README.md"/>
	<Var name="project:readme:examples" type="dynamic" expression="^if(^fileExists($project:readme:examples:file)|^fileContents($project:readme:examples:file))"/>
	
	<Var name="docs:root" type="dynamic" expression="https://rawgit.com/${repo:owner}/${repo:name}/${repo:branch}/Documentation"/>
	<Var name="docs:api:root" type="dynamic" expression="${docs:root}/API"/>
	<Var name="docs:api:index" type="dynamic" expression="${docs:api:root}/index.html"/>
	<Var name="docs:images:root" type="dynamic" expression="${docs:root}/Images"/>

	<Var name="docs:integrationFilesCount" type="dynamic" expression="#(^count($project:dependencies) + 1)"/>

	<Var name="docs:projectsDependenciesList" type="dynamic" expression="^if($project:dependencies|^if(^count($project:dependencies) -LT 2|`$project:dependencies[0]^q(.xcodeproj)`)^if(^count($project:dependencies) -EQ 2|`$project:dependencies[0]^q(.xcodeproj)` and $project:dependencies[1]^q(.xcodeproj)`)^if(^count($project:dependencies) -GT 2|^join(^list(^groupArrayElements($project:dependencies|#(^count($project:dependencies) - 1))[0]|`$(item).xcodeproj`)|, ) and `$project:dependencies[#(^count($project:dependencies) - 1)]^q(.xcodeproj)`))"/>
	<Var name="docs:projectsAllList" type="dynamic" expression="`${project:file}`^if($project:dependencies|^if(^count($project:dependencies) == 1| and|,) $docs:projectsDependenciesList)"/>
	<Var name="docs:frameworksDependenciesList" type="dynamic" expression="^if($project:dependencies|^if(^count($project:dependencies) -LT 2|`$project:dependencies[0]^q(.framework)`)^if(^count($project:dependencies) -EQ 2|`$project:dependencies[0]^q(.framework)` and $project:dependencies[1]^q(.framework)`)^if(^count($project:dependencies) -GT 2|^join(^list(^groupArrayElements($project:dependencies|#(^count($project:dependencies) - 1))[0]|`$(item).framework`)|, ) and `$project:dependencies[#(^count($project:dependencies) - 1)]^q(.framework)`))"/>
	<Var name="docs:frameworksAllList" type="dynamic" expression="`${project:file}`^if($project:dependencies|^if(^count($project:dependencies) == 1| and|,) $docs:frameworksDependenciesList)"/>

	<Var name="docs:cloneCommand" type="dynamic" expression="git clone ^if($project:dependencies|--recursive )${repo:url:http}"/>
	<Var name="docs:carthageSpec" type="dynamic" expression='$repo:host "${repo:owner}/${repo:name}" ~> ${project:version:public}.0'/>

	<Var name="travis:url" type="dynamic" expression="https://travis-ci.^if(${travis:build-status-token}|com|org)/${repo:owner}/${repo:name}"/>
</MBML>
