<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/MBMLCollectionFunctions.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/MBMLCollectionFunctions</TokenIdentifier>
			<Abstract type="html">This class provides a set of MBML functions that perform common
operations on collections such as NSArray, NSSet and NSDictionary
objects.</Abstract>
			<DeclaredIn>MBMLCollectionFunctions.h</DeclaredIn>
            
			
			<NodeRef refid="14"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MBMLCollectionFunctions/isCollection:</TokenIdentifier>
			<Abstract type="html">Determines whether a given object is considered a collection; that is, an
instance of NSSet, NSArray or NSDictionary.</Abstract>
			<DeclaredIn>MBMLCollectionFunctions.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/clm/MBMLCollectionFunctions/isDictionary:</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>+ (NSNumber *)isCollection:(id)param</Declaration>
			<Parameters>
				<Parameter>
					<Name>param</Name>
					<Abstract type="html">The function&apos;s input parameter.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@YES if param represents a collection object, @NO otherwise.</Abstract></ReturnValue>
			<Anchor>//api/name/isCollection:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MBMLCollectionFunctions/isSet:</TokenIdentifier>
			<Abstract type="html">Determines whether a given object is an instance of NSSet.</Abstract>
			<DeclaredIn>MBMLCollectionFunctions.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/clm/MBMLCollectionFunctions/isDictionary:</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>+ (NSNumber *)isSet:(id)param</Declaration>
			<Parameters>
				<Parameter>
					<Name>param</Name>
					<Abstract type="html">The function&apos;s input parameter.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@YES if param represents an NSSet, @NO otherwise.</Abstract></ReturnValue>
			<Anchor>//api/name/isSet:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MBMLCollectionFunctions/isDictionary:</TokenIdentifier>
			<Abstract type="html">Determines whether a given object is an instance of NSDictionary.</Abstract>
			<DeclaredIn>MBMLCollectionFunctions.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/clm/MBMLCollectionFunctions/isSet:</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>+ (NSNumber *)isDictionary:(id)param</Declaration>
			<Parameters>
				<Parameter>
					<Name>param</Name>
					<Abstract type="html">The function&apos;s input parameter.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@YES if param represents an NSDictionary, @NO otherwise.</Abstract></ReturnValue>
			<Anchor>//api/name/isDictionary:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MBMLCollectionFunctions/isArray:</TokenIdentifier>
			<Abstract type="html">Determines whether a given object is an instance of NSArray.</Abstract>
			<DeclaredIn>MBMLCollectionFunctions.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/clm/MBMLCollectionFunctions/isDictionary:</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>+ (NSNumber *)isArray:(id)param</Declaration>
			<Parameters>
				<Parameter>
					<Name>param</Name>
					<Abstract type="html">The function&apos;s input parameter.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">@YES if param represents an NSArray, @NO otherwise.</Abstract></ReturnValue>
			<Anchor>//api/name/isArray:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MBMLCollectionFunctions/count:</TokenIdentifier>
			<Abstract type="html">Returns the count of items in a collection object.</Abstract>
			<DeclaredIn>MBMLCollectionFunctions.h</DeclaredIn>
			
			<Declaration>+ (id)count:(id)param</Declaration>
			<Parameters>
				<Parameter>
					<Name>param</Name>
					<Abstract type="html">The function&apos;s input parameter.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A number containing the count of items in the input parameter.</Abstract></ReturnValue>
			<Anchor>//api/name/count:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MBMLCollectionFunctions/removeObject:</TokenIdentifier>
			<Abstract type="html">Creates and returns a new NSArray instance by removing all instances of
one or more objects from an input array.</Abstract>
			<DeclaredIn>MBMLCollectionFunctions.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/clm/MBMLCollectionFunctions/removeLastObject:</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>+ (id)removeObject:(NSArray *)params</Declaration>
			<Parameters>
				<Parameter>
					<Name>params</Name>
					<Abstract type="html">The function&apos;s input parameters.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An array containing the items in the input array, with the
            specified items removed.</Abstract></ReturnValue>
			<Anchor>//api/name/removeObject:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MBMLCollectionFunctions/removeObjectAtIndex:</TokenIdentifier>
			<Abstract type="html">Creates and returns a new NSArray instance by removing an object at a
given index from the input array.</Abstract>
			<DeclaredIn>MBMLCollectionFunctions.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/clm/MBMLCollectionFunctions/removeLastObject:</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>+ (id)removeObjectAtIndex:(NSArray *)params</Declaration>
			<Parameters>
				<Parameter>
					<Name>params</Name>
					<Abstract type="html">The function&apos;s input parameters.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An array containing the items in the input array, with the
            specified item removed.</Abstract></ReturnValue>
			<Anchor>//api/name/removeObjectAtIndex:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MBMLCollectionFunctions/appendObject:</TokenIdentifier>
			<Abstract type="html">Creates and returns a new NSArray by adding one or more items to the end of
an input array.</Abstract>
			<DeclaredIn>MBMLCollectionFunctions.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/clm/MBMLCollectionFunctions/insertObjectAtIndex:</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>+ (id)appendObject:(NSArray *)params</Declaration>
			<Parameters>
				<Parameter>
					<Name>params</Name>
					<Abstract type="html">The function&apos;s input parameters.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An array containing the items in the input array, with the
            specified item(s) appended.</Abstract></ReturnValue>
			<Anchor>//api/name/appendObject:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MBMLCollectionFunctions/insertObjectAtIndex:</TokenIdentifier>
			<Abstract type="html">Creates and returns a new NSArray instance by inserting an item into an
input array.</Abstract>
			<DeclaredIn>MBMLCollectionFunctions.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/clm/MBMLCollectionFunctions/appendObject:</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>+ (id)insertObjectAtIndex:(NSArray *)params</Declaration>
			<Parameters>
				<Parameter>
					<Name>params</Name>
					<Abstract type="html">The function&apos;s input parameters.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An array containing the items in the input array, with the
            specified item inserted at the given index.</Abstract></ReturnValue>
			<Anchor>//api/name/insertObjectAtIndex:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MBMLCollectionFunctions/array:</TokenIdentifier>
			<Abstract type="html">Returns an NSArray containing the result of evaluating each input parameter
as an object expression.</Abstract>
			<DeclaredIn>MBMLCollectionFunctions.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/clm/MBMLCollectionFunctions/set:</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>+ (id)array:(NSArray *)params</Declaration>
			<Parameters>
				<Parameter>
					<Name>params</Name>
					<Abstract type="html">The function&apos;s input parameters.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An array containing the value of each input parameter expression.</Abstract></ReturnValue>
			<Anchor>//api/name/array:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MBMLCollectionFunctions/subarray:</TokenIdentifier>
			<Abstract type="html">Returns an NSArray containing the receiving array’s elements that fall
within the limits specified by a given range.</Abstract>
			<DeclaredIn>MBMLCollectionFunctions.h</DeclaredIn>
			
			<Declaration>+ (id)subarray:(NSArray *)params</Declaration>
			<Parameters>
				<Parameter>
					<Name>params</Name>
					<Abstract type="html">The function&apos;s input parameters.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An array containing the receiving array’s elements that fall
within the limits specified by range.</Abstract></ReturnValue>
			<Anchor>//api/name/subarray:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MBMLCollectionFunctions/set:</TokenIdentifier>
			<Abstract type="html">Returns an NSSet containing the result of evaluating each input parameter
as an object expression.</Abstract>
			<DeclaredIn>MBMLCollectionFunctions.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/clm/MBMLCollectionFunctions/setWithArray:</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>+ (id)set:(NSArray *)params</Declaration>
			<Parameters>
				<Parameter>
					<Name>params</Name>
					<Abstract type="html">The function&apos;s input parameters.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A set containing the value of each input parameter expression.</Abstract></ReturnValue>
			<Anchor>//api/name/set:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MBMLCollectionFunctions/setWithArray:</TokenIdentifier>
			<Abstract type="html">Returns an NSSet containing the same elements as the passed-in array.</Abstract>
			<DeclaredIn>MBMLCollectionFunctions.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/clm/MBMLCollectionFunctions/set:</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>+ (id)setWithArray:(id)array</Declaration>
			<Parameters>
				<Parameter>
					<Name>array</Name>
					<Abstract type="html">The function&apos;s input parameter.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A set containing the values of the passed-in array.</Abstract></ReturnValue>
			<Anchor>//api/name/setWithArray:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MBMLCollectionFunctions/dictionary:</TokenIdentifier>
			<Abstract type="html">Creates a new NSDictionary instance containing the items provided as
keys and values.</Abstract>
			<DeclaredIn>MBMLCollectionFunctions.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/clm/MBMLCollectionFunctions/array:</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>+ (id)dictionary:(NSArray *)params</Declaration>
			<Parameters>
				<Parameter>
					<Name>params</Name>
					<Abstract type="html">The function&apos;s input parameters.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A dictionary containing the specified key/value pairs.</Abstract></ReturnValue>
			<Anchor>//api/name/dictionary:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MBMLCollectionFunctions/keys:</TokenIdentifier>
			<Abstract type="html">Returns an array containing the keys of an NSDictionary.</Abstract>
			<DeclaredIn>MBMLCollectionFunctions.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/clm/MBMLCollectionFunctions/values:</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>+ (id)keys:(NSDictionary *)dict</Declaration>
			<Parameters>
				<Parameter>
					<Name>dict</Name>
					<Abstract type="html">The function&apos;s input parameter, which is expected to
            be a dictionary.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An array containing the passed-in dictionary&apos;s keys.</Abstract></ReturnValue>
			<Anchor>//api/name/keys:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MBMLCollectionFunctions/values:</TokenIdentifier>
			<Abstract type="html">Returns an array containing the values of an NSDictionary.</Abstract>
			<DeclaredIn>MBMLCollectionFunctions.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/clm/MBMLCollectionFunctions/keys:</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>+ (id)values:(NSDictionary *)dict</Declaration>
			<Parameters>
				<Parameter>
					<Name>dict</Name>
					<Abstract type="html">The function&apos;s input parameter, which is expected to
            be a dictionary.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An array containing the passed-in dictionary&apos;s values.</Abstract></ReturnValue>
			<Anchor>//api/name/values:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MBMLCollectionFunctions/removeLastObject:</TokenIdentifier>
			<Abstract type="html">Creates and returns a new NSArray instance by removing the last object
from the input array.</Abstract>
			<DeclaredIn>MBMLCollectionFunctions.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/clm/MBMLCollectionFunctions/removeObjectAtIndex:</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>+ (id)removeLastObject:(id)array</Declaration>
			<Parameters>
				<Parameter>
					<Name>array</Name>
					<Abstract type="html">The function&apos;s input parameter, which is expected to
            be an array.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A copy of the input array, with the last item removed.</Abstract></ReturnValue>
			<Anchor>//api/name/removeLastObject:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MBMLCollectionFunctions/lastObject:</TokenIdentifier>
			<Abstract type="html">Returns the last object in an array.</Abstract>
			<DeclaredIn>MBMLCollectionFunctions.h</DeclaredIn>
			
			<Declaration>+ (id)lastObject:(id)array</Declaration>
			<Parameters>
				<Parameter>
					<Name>array</Name>
					<Abstract type="html">The function&apos;s input parameter, which is expected to
            be an array.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The last item in the input array.</Abstract></ReturnValue>
			<Anchor>//api/name/lastObject:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MBMLCollectionFunctions/indexOf:</TokenIdentifier>
			<Abstract type="html">Returns the index of a specified value within an array, or -1 if the
value is not found.</Abstract>
			<DeclaredIn>MBMLCollectionFunctions.h</DeclaredIn>
			
			<Declaration>+ (id)indexOf:(NSArray *)params</Declaration>
			<Parameters>
				<Parameter>
					<Name>params</Name>
					<Abstract type="html">an array containing the input parameters for the function</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A number indicating the zero-based index of the value in the array.
            If the value does not exist in the array, -1 is returned.</Abstract></ReturnValue>
			<Anchor>//api/name/indexOf:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MBMLCollectionFunctions/copyOf:</TokenIdentifier>
			<Abstract type="html">Returns a copy of an object adopting the NSCopying protocol.</Abstract>
			<DeclaredIn>MBMLCollectionFunctions.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/clm/MBMLCollectionFunctions/mutableCopyOf:</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>+ (id)copyOf:(id)param</Declaration>
			<Parameters>
				<Parameter>
					<Name>param</Name>
					<Abstract type="html">The function&apos;s input parameter.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A copy of the object yielded by the input expression.</Abstract></ReturnValue>
			<Anchor>//api/name/copyOf:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MBMLCollectionFunctions/mutableCopyOf:</TokenIdentifier>
			<Abstract type="html">Returns a mutable copy of an object adopting the NSMutableCopying protocol.</Abstract>
			<DeclaredIn>MBMLCollectionFunctions.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/clm/MBMLCollectionFunctions/copyOf:</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>+ (id)mutableCopyOf:(id)param</Declaration>
			<Parameters>
				<Parameter>
					<Name>param</Name>
					<Abstract type="html">The function&apos;s input parameter.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A mutable copy of the object yielded by the input expression.</Abstract></ReturnValue>
			<Anchor>//api/name/mutableCopyOf:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MBMLCollectionFunctions/getValueForKey:</TokenIdentifier>
			<Abstract type="html">Uses key-value coding (KVC) to retrieve the value for a given key from
a target object.</Abstract>
			<DeclaredIn>MBMLCollectionFunctions.h</DeclaredIn>
			
			<Declaration>+ (id)getValueForKey:(NSArray *)params</Declaration>
			<Parameters>
				<Parameter>
					<Name>params</Name>
					<Abstract type="html">The function&apos;s input parameters.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The value for the given key. If the key does not have an associated
            value, the default value (if it was provided) or nil (if no
            default was provided) is returned.</Abstract></ReturnValue>
			<Anchor>//api/name/getValueForKey:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
        
        
	</File>
</Tokens>