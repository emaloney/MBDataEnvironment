<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/MBDevice.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/MBDevice</TokenIdentifier>
			<Abstract type="html">The MBDevice singleton provides information about the device and operating
environment of the running application.</Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
            
			
			<NodeRef refid="6"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBDevice/setIsSimulator:</TokenIdentifier>
			<Abstract type="html">Returns YES when running in the iOS Simulator environment; NO when
    running on the device. </Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL isSimulator</Declaration>
			
			
			<Anchor>//api/name/isSimulator</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBDevice/isSimulator</TokenIdentifier>
			<Abstract type="html">Returns YES when running in the iOS Simulator environment; NO when
    running on the device. </Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL isSimulator</Declaration>
			
			
			<Anchor>//api/name/isSimulator</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MBDevice/isSimulator</TokenIdentifier>
			<Abstract type="html">Returns YES when running in the iOS Simulator environment; NO when
    running on the device. </Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL isSimulator</Declaration>
			
			
			<Anchor>//api/name/isSimulator</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBDevice/setIsIPhone:</TokenIdentifier>
			<Abstract type="html">Returns YES when running in an iPhone environment.</Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL isIPhone</Declaration>
			
			
			<Anchor>//api/name/isIPhone</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBDevice/isIPhone</TokenIdentifier>
			<Abstract type="html">Returns YES when running in an iPhone environment.</Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL isIPhone</Declaration>
			
			
			<Anchor>//api/name/isIPhone</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MBDevice/isIPhone</TokenIdentifier>
			<Abstract type="html">Returns YES when running in an iPhone environment.</Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL isIPhone</Declaration>
			
			
			<Anchor>//api/name/isIPhone</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBDevice/setIsIPad:</TokenIdentifier>
			<Abstract type="html">Returns YES when running in an iPad environment.</Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL isIPad</Declaration>
			
			
			<Anchor>//api/name/isIPad</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBDevice/isIPad</TokenIdentifier>
			<Abstract type="html">Returns YES when running in an iPad environment.</Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL isIPad</Declaration>
			
			
			<Anchor>//api/name/isIPad</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MBDevice/isIPad</TokenIdentifier>
			<Abstract type="html">Returns YES when running in an iPad environment.</Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL isIPad</Declaration>
			
			
			<Anchor>//api/name/isIPad</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBDevice/setOsType:</TokenIdentifier>
			<Abstract type="html">Returns a human-readable string indicating the operating system type,
    eg. &quot;iPhone OS&quot;. </Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSString *osType</Declaration>
			
			
			<Anchor>//api/name/osType</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBDevice/osType</TokenIdentifier>
			<Abstract type="html">Returns a human-readable string indicating the operating system type,
    eg. &quot;iPhone OS&quot;. </Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSString *osType</Declaration>
			
			
			<Anchor>//api/name/osType</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MBDevice/osType</TokenIdentifier>
			<Abstract type="html">Returns a human-readable string indicating the operating system type,
    eg. &quot;iPhone OS&quot;. </Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSString *osType</Declaration>
			
			
			<Anchor>//api/name/osType</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBDevice/setOsVersion:</TokenIdentifier>
			<Abstract type="html">Returns the operating system version string, eg. &quot;8.1.3&quot;</Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSString *osVersion</Declaration>
			
			
			<Anchor>//api/name/osVersion</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBDevice/osVersion</TokenIdentifier>
			<Abstract type="html">Returns the operating system version string, eg. &quot;8.1.3&quot;</Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSString *osVersion</Declaration>
			
			
			<Anchor>//api/name/osVersion</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MBDevice/osVersion</TokenIdentifier>
			<Abstract type="html">Returns the operating system version string, eg. &quot;8.1.3&quot;</Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSString *osVersion</Declaration>
			
			
			<Anchor>//api/name/osVersion</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBDevice/setOsVersionComponents:</TokenIdentifier>
			<Abstract type="html">Returns the individual components of the operating system version as an
    array of NSNumbers, eg. [8, 1, 3]. </Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSArray *osVersionComponents</Declaration>
			
			
			<Anchor>//api/name/osVersionComponents</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBDevice/osVersionComponents</TokenIdentifier>
			<Abstract type="html">Returns the individual components of the operating system version as an
    array of NSNumbers, eg. [8, 1, 3]. </Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSArray *osVersionComponents</Declaration>
			
			
			<Anchor>//api/name/osVersionComponents</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MBDevice/osVersionComponents</TokenIdentifier>
			<Abstract type="html">Returns the individual components of the operating system version as an
    array of NSNumbers, eg. [8, 1, 3]. </Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSArray *osVersionComponents</Declaration>
			
			
			<Anchor>//api/name/osVersionComponents</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBDevice/setOsVersionMajor:</TokenIdentifier>
			<Abstract type="html">Returns the major component of the operating system version, eg. the 8
    in &quot;8.1.3&quot;. </Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSNumber *osVersionMajor</Declaration>
			
			
			<Anchor>//api/name/osVersionMajor</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBDevice/osVersionMajor</TokenIdentifier>
			<Abstract type="html">Returns the major component of the operating system version, eg. the 8
    in &quot;8.1.3&quot;. </Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSNumber *osVersionMajor</Declaration>
			
			
			<Anchor>//api/name/osVersionMajor</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MBDevice/osVersionMajor</TokenIdentifier>
			<Abstract type="html">Returns the major component of the operating system version, eg. the 8
    in &quot;8.1.3&quot;. </Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSNumber *osVersionMajor</Declaration>
			
			
			<Anchor>//api/name/osVersionMajor</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBDevice/setOsVersionMinor:</TokenIdentifier>
			<Abstract type="html">Returns the minor component of the operating system version, eg. the 1
    in &quot;8.1.3&quot;. </Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSNumber *osVersionMinor</Declaration>
			
			
			<Anchor>//api/name/osVersionMinor</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBDevice/osVersionMinor</TokenIdentifier>
			<Abstract type="html">Returns the minor component of the operating system version, eg. the 1
    in &quot;8.1.3&quot;. </Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSNumber *osVersionMinor</Declaration>
			
			
			<Anchor>//api/name/osVersionMinor</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MBDevice/osVersionMinor</TokenIdentifier>
			<Abstract type="html">Returns the minor component of the operating system version, eg. the 1
    in &quot;8.1.3&quot;. </Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSNumber *osVersionMinor</Declaration>
			
			
			<Anchor>//api/name/osVersionMinor</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBDevice/setOsVersionRevision:</TokenIdentifier>
			<Abstract type="html">Returns the revision component of the operating system version, eg. the 3
    in &quot;8.1.3&quot;. </Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSNumber *osVersionRevision</Declaration>
			
			
			<Anchor>//api/name/osVersionRevision</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBDevice/osVersionRevision</TokenIdentifier>
			<Abstract type="html">Returns the revision component of the operating system version, eg. the 3
    in &quot;8.1.3&quot;. </Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSNumber *osVersionRevision</Declaration>
			
			
			<Anchor>//api/name/osVersionRevision</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MBDevice/osVersionRevision</TokenIdentifier>
			<Abstract type="html">Returns the revision component of the operating system version, eg. the 3
    in &quot;8.1.3&quot;. </Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSNumber *osVersionRevision</Declaration>
			
			
			<Anchor>//api/name/osVersionRevision</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBDevice/setAppIsInBackground:</TokenIdentifier>
			<Abstract type="html">Returns YES if the application is currently in the background.</Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL appIsInBackground</Declaration>
			
			
			<Anchor>//api/name/appIsInBackground</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBDevice/appIsInBackground</TokenIdentifier>
			<Abstract type="html">Returns YES if the application is currently in the background.</Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL appIsInBackground</Declaration>
			
			
			<Anchor>//api/name/appIsInBackground</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MBDevice/appIsInBackground</TokenIdentifier>
			<Abstract type="html">Returns YES if the application is currently in the background.</Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL appIsInBackground</Declaration>
			
			
			<Anchor>//api/name/appIsInBackground</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBDevice/setCurrentOrientation:</TokenIdentifier>
			<Abstract type="html">Returns the string &quot;portrait&quot; or &quot;landscape&quot; depending on the current
    orientation of the device. </Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSString *currentOrientation</Declaration>
			
			
			<Anchor>//api/name/currentOrientation</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBDevice/currentOrientation</TokenIdentifier>
			<Abstract type="html">Returns the string &quot;portrait&quot; or &quot;landscape&quot; depending on the current
    orientation of the device. </Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSString *currentOrientation</Declaration>
			
			
			<Anchor>//api/name/currentOrientation</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MBDevice/currentOrientation</TokenIdentifier>
			<Abstract type="html">Returns the string &quot;portrait&quot; or &quot;landscape&quot; depending on the current
    orientation of the device. </Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSString *currentOrientation</Declaration>
			
			
			<Anchor>//api/name/currentOrientation</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBDevice/setIsPortrait:</TokenIdentifier>
			<Abstract type="html">Returns YES if the device is currently in portrait orientation.</Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL isPortrait</Declaration>
			
			
			<Anchor>//api/name/isPortrait</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBDevice/isPortrait</TokenIdentifier>
			<Abstract type="html">Returns YES if the device is currently in portrait orientation.</Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL isPortrait</Declaration>
			
			
			<Anchor>//api/name/isPortrait</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MBDevice/isPortrait</TokenIdentifier>
			<Abstract type="html">Returns YES if the device is currently in portrait orientation.</Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL isPortrait</Declaration>
			
			
			<Anchor>//api/name/isPortrait</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBDevice/setIsLandscape:</TokenIdentifier>
			<Abstract type="html">Returns YES if the device is currently in landscape orientation.</Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL isLandscape</Declaration>
			
			
			<Anchor>//api/name/isLandscape</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBDevice/isLandscape</TokenIdentifier>
			<Abstract type="html">Returns YES if the device is currently in landscape orientation.</Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL isLandscape</Declaration>
			
			
			<Anchor>//api/name/isLandscape</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MBDevice/isLandscape</TokenIdentifier>
			<Abstract type="html">Returns YES if the device is currently in landscape orientation.</Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL isLandscape</Declaration>
			
			
			<Anchor>//api/name/isLandscape</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBDevice/setScreenScale:</TokenIdentifier>
			<Abstract type="html">Returns the scale of the main UIScreen.</Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSNumber *screenScale</Declaration>
			
			
			<Anchor>//api/name/screenScale</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBDevice/screenScale</TokenIdentifier>
			<Abstract type="html">Returns the scale of the main UIScreen.</Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSNumber *screenScale</Declaration>
			
			
			<Anchor>//api/name/screenScale</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MBDevice/screenScale</TokenIdentifier>
			<Abstract type="html">Returns the scale of the main UIScreen.</Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSNumber *screenScale</Declaration>
			
			
			<Anchor>//api/name/screenScale</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBDevice/setIsRetina:</TokenIdentifier>
			<Abstract type="html">Returns YES if the main UIScreen&apos;s scale is 2.0 or greater.</Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL isRetina</Declaration>
			
			
			<Anchor>//api/name/isRetina</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBDevice/isRetina</TokenIdentifier>
			<Abstract type="html">Returns YES if the main UIScreen&apos;s scale is 2.0 or greater.</Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL isRetina</Declaration>
			
			
			<Anchor>//api/name/isRetina</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MBDevice/isRetina</TokenIdentifier>
			<Abstract type="html">Returns YES if the main UIScreen&apos;s scale is 2.0 or greater.</Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL isRetina</Declaration>
			
			
			<Anchor>//api/name/isRetina</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBDevice/setScreenWidth:</TokenIdentifier>
			<Abstract type="html">Returns the width of the main UIScreen in the current orientation.</Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSNumber *screenWidth</Declaration>
			
			
			<Anchor>//api/name/screenWidth</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBDevice/screenWidth</TokenIdentifier>
			<Abstract type="html">Returns the width of the main UIScreen in the current orientation.</Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSNumber *screenWidth</Declaration>
			
			
			<Anchor>//api/name/screenWidth</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MBDevice/screenWidth</TokenIdentifier>
			<Abstract type="html">Returns the width of the main UIScreen in the current orientation.</Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSNumber *screenWidth</Declaration>
			
			
			<Anchor>//api/name/screenWidth</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBDevice/setScreenHeight:</TokenIdentifier>
			<Abstract type="html">Returns the height of the main UIScreen in the current orientation.</Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSNumber *screenHeight</Declaration>
			
			
			<Anchor>//api/name/screenHeight</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBDevice/screenHeight</TokenIdentifier>
			<Abstract type="html">Returns the height of the main UIScreen in the current orientation.</Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSNumber *screenHeight</Declaration>
			
			
			<Anchor>//api/name/screenHeight</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MBDevice/screenHeight</TokenIdentifier>
			<Abstract type="html">Returns the height of the main UIScreen in the current orientation.</Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSNumber *screenHeight</Declaration>
			
			
			<Anchor>//api/name/screenHeight</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBDevice/setScreenSize:</TokenIdentifier>
			<Abstract type="html">Returns a comma-separated string containing the width and height of the
    screen in the current orientation as &quot;width,height&quot;. </Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSString *screenSize</Declaration>
			
			
			<Anchor>//api/name/screenSize</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBDevice/screenSize</TokenIdentifier>
			<Abstract type="html">Returns a comma-separated string containing the width and height of the
    screen in the current orientation as &quot;width,height&quot;. </Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSString *screenSize</Declaration>
			
			
			<Anchor>//api/name/screenSize</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MBDevice/screenSize</TokenIdentifier>
			<Abstract type="html">Returns a comma-separated string containing the width and height of the
    screen in the current orientation as &quot;width,height&quot;. </Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSString *screenSize</Declaration>
			
			
			<Anchor>//api/name/screenSize</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBDevice/setScreenSizePortrait:</TokenIdentifier>
			<Abstract type="html">Returns a comma-separated string containing the width and height of the
    screen when the device is in portrait orientation. </Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSString *screenSizePortrait</Declaration>
			
			
			<Anchor>//api/name/screenSizePortrait</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBDevice/screenSizePortrait</TokenIdentifier>
			<Abstract type="html">Returns a comma-separated string containing the width and height of the
    screen when the device is in portrait orientation. </Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSString *screenSizePortrait</Declaration>
			
			
			<Anchor>//api/name/screenSizePortrait</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MBDevice/screenSizePortrait</TokenIdentifier>
			<Abstract type="html">Returns a comma-separated string containing the width and height of the
    screen when the device is in portrait orientation. </Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSString *screenSizePortrait</Declaration>
			
			
			<Anchor>//api/name/screenSizePortrait</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBDevice/setScreenSizeLandscape:</TokenIdentifier>
			<Abstract type="html">Returns a comma-separated string containing the width and height of the
    screen when the device is in landscape orientation. </Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSString *screenSizeLandscape</Declaration>
			
			
			<Anchor>//api/name/screenSizeLandscape</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MBDevice/screenSizeLandscape</TokenIdentifier>
			<Abstract type="html">Returns a comma-separated string containing the width and height of the
    screen when the device is in landscape orientation. </Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSString *screenSizeLandscape</Declaration>
			
			
			<Anchor>//api/name/screenSizeLandscape</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MBDevice/screenSizeLandscape</TokenIdentifier>
			<Abstract type="html">Returns a comma-separated string containing the width and height of the
    screen when the device is in landscape orientation. </Abstract>
			<DeclaredIn>MBDevice.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSString *screenSizeLandscape</Declaration>
			
			
			<Anchor>//api/name/screenSizeLandscape</Anchor>
            <NodeRef refid="6"/>
		</Token>
		
        
        
	</File>
</Tokens>