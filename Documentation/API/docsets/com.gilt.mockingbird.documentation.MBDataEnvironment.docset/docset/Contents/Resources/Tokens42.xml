<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Categories/NSString+MBExpression.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cat/NSString(MBExpression)</TokenIdentifier>
			<Abstract type="html">This NSString class category adds methods for evaluating expressions
directly from NSString instances.</Abstract>
			<DeclaredIn>MBExpressionExtensions.h</DeclaredIn>
            
			
			<NodeRef refid="42"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSString/evaluateAsObject</TokenIdentifier>
			<Abstract type="html">Evaluates the receiver as an expression returning an object.</Abstract>
			<DeclaredIn>MBExpressionExtensions.h</DeclaredIn>
			
			<Declaration>- (nullable id)evaluateAsObject</Declaration>
			
			<ReturnValue><Abstract type="html">The result of evaluating the receiver as an object expression.</Abstract></ReturnValue>
			<Anchor>//api/name/evaluateAsObject</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSString/evaluateAsString</TokenIdentifier>
			<Abstract type="html">Evaluates the receiver as an expression returning a string.</Abstract>
			<DeclaredIn>MBExpressionExtensions.h</DeclaredIn>
			
			<Declaration>- (nullable NSString *)evaluateAsString</Declaration>
			
			<ReturnValue><Abstract type="html">The result of evaluating the receiver as a string expression.</Abstract></ReturnValue>
			<Anchor>//api/name/evaluateAsString</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSString/evaluateAsNumber</TokenIdentifier>
			<Abstract type="html">Evaluates the receiver as an expression returning a numeric value.</Abstract>
			<DeclaredIn>MBExpressionExtensions.h</DeclaredIn>
			
			<Declaration>- (nullable NSDecimalNumber *)evaluateAsNumber</Declaration>
			
			<ReturnValue><Abstract type="html">The result of evaluating the receiver as a numeric expression.</Abstract></ReturnValue>
			<Anchor>//api/name/evaluateAsNumber</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSString/evaluateAsBoolean</TokenIdentifier>
			<Abstract type="html">Evaluates the receiver as an expression returning a boolean value.</Abstract>
			<DeclaredIn>MBExpressionExtensions.h</DeclaredIn>
			
			<Declaration>- (BOOL)evaluateAsBoolean</Declaration>
			
			<ReturnValue><Abstract type="html">The result of evaluating the receiver as a boolean expression.</Abstract></ReturnValue>
			<Anchor>//api/name/evaluateAsBoolean</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSString/asVariableExpression</TokenIdentifier>
			<Abstract type="html">Returns an expression usable for referencing the MBML variable whose
name is contained in the receiver.</Abstract>
			<DeclaredIn>MBExpressionExtensions.h</DeclaredIn>
			
			<Declaration>- (nonnull NSString *)asVariableExpression</Declaration>
			
			<ReturnValue><Abstract type="html">A Mockingbird expression usable for referencing the variable
                named by the receiver.</Abstract></ReturnValue>
			<Anchor>//api/name/asVariableExpression</Anchor>
            <NodeRef refid="42"/>
		</Token>
		
        
        
	</File>
</Tokens>